-- MySQL Script generated by MySQL Workbench
-- Thu Oct  8 20:43:15 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema LMS_v1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema LMS_v1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `LMS_v1` DEFAULT CHARACTER SET utf8 ;
USE `LMS_v1` ;

-- -----------------------------------------------------
-- Table `LMS_v1`.`oauth_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`oauth_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`user` (
  `id` INT NOT NULL,
  `email` VARCHAR(50) NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `oauth_key` VARCHAR(45) NULL,
  `oauth_type_id` INT NOT NULL,
  PRIMARY KEY (`id`, `oauth_type_id`),
  INDEX `fk_user_oauth_type_idx` (`oauth_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_oauth_type`
    FOREIGN KEY (`oauth_type_id`)
    REFERENCES `LMS_v1`.`oauth_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`role` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`permission` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`role_has_permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`role_has_permission` (
  `role_id` INT NOT NULL,
  `permission_id` INT NOT NULL,
  PRIMARY KEY (`role_id`, `permission_id`),
  INDEX `fk_role_has_permission_permission1_idx` (`permission_id` ASC) VISIBLE,
  INDEX `fk_role_has_permission_role1_idx` (`role_id` ASC) VISIBLE,
  CONSTRAINT `fk_role_has_permission_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `LMS_v1`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_permission_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `LMS_v1`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`class` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `department` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`section`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`section` (
  `id` INT NOT NULL,
  `number` INT NULL,
  `class_id` INT NOT NULL,
  PRIMARY KEY (`id`, `class_id`),
  INDEX `fk_section_class1_idx` (`class_id` ASC) VISIBLE,
  CONSTRAINT `fk_section_class1`
    FOREIGN KEY (`class_id`)
    REFERENCES `LMS_v1`.`class` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`section_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`section_has_user` (
  `section_id` INT NOT NULL,
  `section_class_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `user_oauth_type_id` INT NOT NULL,
  `user_role_id` INT NOT NULL,
  PRIMARY KEY (`section_id`, `section_class_id`, `user_id`, `user_oauth_type_id`, `user_role_id`),
  INDEX `fk_section_has_user_user1_idx` (`user_id` ASC, `user_oauth_type_id` ASC, `user_role_id` ASC) VISIBLE,
  INDEX `fk_section_has_user_section1_idx` (`section_id` ASC, `section_class_id` ASC) VISIBLE,
  CONSTRAINT `fk_section_has_user_section1`
    FOREIGN KEY (`section_id` , `section_class_id`)
    REFERENCES `LMS_v1`.`section` (`id` , `class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_section_has_user_user1`
    FOREIGN KEY (`user_id` , `user_oauth_type_id`)
    REFERENCES `LMS_v1`.`user` (`id` , `oauth_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`class_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`class_has_user` (
  `class_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `user_oauth_type_id` INT NOT NULL,
  `user_role_id` INT NOT NULL,
  PRIMARY KEY (`class_id`, `user_id`, `user_oauth_type_id`, `user_role_id`),
  INDEX `fk_class_has_user_user1_idx` (`user_id` ASC, `user_oauth_type_id` ASC, `user_role_id` ASC) VISIBLE,
  INDEX `fk_class_has_user_class1_idx` (`class_id` ASC) VISIBLE,
  CONSTRAINT `fk_class_has_user_class1`
    FOREIGN KEY (`class_id`)
    REFERENCES `LMS_v1`.`class` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_class_has_user_user1`
    FOREIGN KEY (`user_id` , `user_oauth_type_id`)
    REFERENCES `LMS_v1`.`user` (`id` , `oauth_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`assignment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`assignment` (
  `id` INT NOT NULL,
  `description` VARCHAR(255) NULL,
  `title` VARCHAR(70) NULL,
  `html_filename` VARCHAR(45) NULL,
  `section_id` INT NOT NULL,
  `section_class_id` INT NOT NULL,
  PRIMARY KEY (`id`, `section_id`, `section_class_id`),
  INDEX `fk_assignment_section1_idx` (`section_id` ASC, `section_class_id` ASC) VISIBLE,
  CONSTRAINT `fk_assignment_section1`
    FOREIGN KEY (`section_id` , `section_class_id`)
    REFERENCES `LMS_v1`.`section` (`id` , `class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`submission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`submission` (
  `id` INT NOT NULL,
  `comment` VARCHAR(255) NULL,
  `grade` INT NULL,
  `assignment_id` INT NOT NULL,
  `assignment_section_id` INT NOT NULL,
  `assignment_section_class_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `assignment_id`, `assignment_section_id`, `assignment_section_class_id`, `user_id`),
  INDEX `fk_submission_assignment1_idx` (`assignment_id` ASC, `assignment_section_id` ASC, `assignment_section_class_id` ASC) VISIBLE,
  INDEX `fk_submission_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_submission_assignment1`
    FOREIGN KEY (`assignment_id` , `assignment_section_id` , `assignment_section_class_id`)
    REFERENCES `LMS_v1`.`assignment` (`id` , `section_id` , `section_class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_submission_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `LMS_v1`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`announcement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`announcement` (
  `id` INT NOT NULL,
  `title` VARCHAR(100) NOT NULL,
  `description` TEXT NULL,
  `url` VARCHAR(100) NULL,
  `html_filename` VARCHAR(100) NULL,
  `section_id` INT NOT NULL,
  `section_class_id` INT NOT NULL,
  `timestamp` TIMESTAMP NULL,
  PRIMARY KEY (`id`, `section_id`, `section_class_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`user_has_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`user_has_role` (
  `user_id` INT NOT NULL,
  `user_oauth_type_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `user_oauth_type_id`, `role_id`),
  INDEX `fk_user_has_role_role1_idx` (`role_id` ASC) VISIBLE,
  INDEX `fk_user_has_role_user1_idx` (`user_id` ASC, `user_oauth_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_role_user1`
    FOREIGN KEY (`user_id` , `user_oauth_type_id`)
    REFERENCES `LMS_v1`.`user` (`id` , `oauth_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `LMS_v1`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`school`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`school` (
  `id` INT NOT NULL,
  `name` VARCHAR(75) NULL,
  `url` VARCHAR(75) NULL,
  `key` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`school_has_announcement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`school_has_announcement` (
  `school_id` INT NOT NULL,
  `announcement_id` INT NOT NULL,
  `announcement_section_id` INT NOT NULL,
  `announcement_section_class_id` INT NOT NULL,
  PRIMARY KEY (`school_id`, `announcement_id`, `announcement_section_id`, `announcement_section_class_id`),
  INDEX `fk_school_has_announcement_announcement1_idx` (`announcement_id` ASC, `announcement_section_id` ASC, `announcement_section_class_id` ASC) VISIBLE,
  INDEX `fk_school_has_announcement_school1_idx` (`school_id` ASC) VISIBLE,
  CONSTRAINT `fk_school_has_announcement_school1`
    FOREIGN KEY (`school_id`)
    REFERENCES `LMS_v1`.`school` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_school_has_announcement_announcement1`
    FOREIGN KEY (`announcement_id` , `announcement_section_id` , `announcement_section_class_id`)
    REFERENCES `LMS_v1`.`announcement` (`id` , `section_id` , `section_class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`organization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`organization` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `url` VARCHAR(45) NULL,
  `key` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `key_UNIQUE` (`key` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`organization_has_school`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`organization_has_school` (
  `organization_id` INT NOT NULL,
  `school_id` INT NOT NULL,
  PRIMARY KEY (`organization_id`, `school_id`),
  INDEX `fk_organization_has_school_school1_idx` (`school_id` ASC) VISIBLE,
  INDEX `fk_organization_has_school_organization1_idx` (`organization_id` ASC) VISIBLE,
  CONSTRAINT `fk_organization_has_school_organization1`
    FOREIGN KEY (`organization_id`)
    REFERENCES `LMS_v1`.`organization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_organization_has_school_school1`
    FOREIGN KEY (`school_id`)
    REFERENCES `LMS_v1`.`school` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`organization_has_announcement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`organization_has_announcement` (
  `organization_id` INT NOT NULL,
  `announcement_id` INT NOT NULL,
  `announcement_section_id` INT NOT NULL,
  `announcement_section_class_id` INT NOT NULL,
  PRIMARY KEY (`organization_id`, `announcement_id`, `announcement_section_id`, `announcement_section_class_id`),
  INDEX `fk_organization_has_announcement_announcement1_idx` (`announcement_id` ASC, `announcement_section_id` ASC, `announcement_section_class_id` ASC) VISIBLE,
  INDEX `fk_organization_has_announcement_organization1_idx` (`organization_id` ASC) VISIBLE,
  CONSTRAINT `fk_organization_has_announcement_organization1`
    FOREIGN KEY (`organization_id`)
    REFERENCES `LMS_v1`.`organization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_organization_has_announcement_announcement1`
    FOREIGN KEY (`announcement_id` , `announcement_section_id` , `announcement_section_class_id`)
    REFERENCES `LMS_v1`.`announcement` (`id` , `section_id` , `section_class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LMS_v1`.`section_has_announcement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LMS_v1`.`section_has_announcement` (
  `section_id` INT NOT NULL,
  `section_class_id` INT NOT NULL,
  `announcement_id` INT NOT NULL,
  `announcement_section_id` INT NOT NULL,
  `announcement_section_class_id` INT NOT NULL,
  PRIMARY KEY (`section_id`, `section_class_id`, `announcement_id`, `announcement_section_id`, `announcement_section_class_id`),
  INDEX `fk_section_has_announcement_announcement1_idx` (`announcement_id` ASC, `announcement_section_id` ASC, `announcement_section_class_id` ASC) VISIBLE,
  INDEX `fk_section_has_announcement_section1_idx` (`section_id` ASC, `section_class_id` ASC) VISIBLE,
  CONSTRAINT `fk_section_has_announcement_section1`
    FOREIGN KEY (`section_id` , `section_class_id`)
    REFERENCES `LMS_v1`.`section` (`id` , `class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_section_has_announcement_announcement1`
    FOREIGN KEY (`announcement_id` , `announcement_section_id` , `announcement_section_class_id`)
    REFERENCES `LMS_v1`.`announcement` (`id` , `section_id` , `section_class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
